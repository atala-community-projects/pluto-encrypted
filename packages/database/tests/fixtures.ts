import SDK from "@atala/prism-wallet-sdk";
const {
  Ed25519KeyPair,
  Ed25519PrivateKey,
  Secp256k1KeyPair,
  Secp256k1PrivateKey,
  X25519KeyPair,
  X25519PrivateKey,
} = SDK;

const secpPrivateKey = new Secp256k1PrivateKey(
  new Uint8Array([
    45, 182, 188, 189, 107, 229, 136, 180, 199, 177, 110, 84, 98, 140, 121, 84,
    107, 105, 179, 139, 14, 174, 177, 63, 173, 141, 7, 118, 161, 192, 192, 221,
  ])
);
export const secp256K1 = new Secp256k1KeyPair(
  secpPrivateKey,
  secpPrivateKey.publicKey()
);

const ed25519PrivateKey = new Ed25519PrivateKey(
  Buffer.from("JLIJQ5jlkyqtGmtOth6yggJLLC0zuRhUPiBhd1-rGPs", "base64url")
);
export const ed25519 = new Ed25519KeyPair(
  ed25519PrivateKey,
  ed25519PrivateKey.publicKey()
);

const x25519PrivateKey = new X25519PrivateKey(
  Buffer.from("eHbEtI71XIBIsuQK7XdjZ_ZPnLZb3y4paWoqSoS7BnI", "base64url")
);
export const x25519 = new X25519KeyPair(
  x25519PrivateKey,
  x25519PrivateKey.publicKey()
);

export const linkSecret: SDK.Domain.Anoncreds.LinkSecret =
  "11713282333014162675185775227133916651856831195832037281552411830422122210216";

export const schema: SDK.Domain.Anoncreds.Schema = {
  name: "schema name",
  version: "1.0",
  attrNames: ["name", "age"],
  issuerId: "did:web:xyz",
};

export const schemaId = "did:web:xyz/resource/schema";
export const schemas = { [schemaId]: schema };
export const credDefId = "did:web:xyz/resource/cred-def";

export const credOffer: SDK.Domain.Anoncreds.CredentialOffer = {
  schema_id: schemaId,
  cred_def_id: "did:web:xyz/resource/cred-def",
  key_correctness_proof: {
    c: "76557819503450570442357976029271303987759136289314846847024757974752606615433",
    xz_cap:
      "26047879363332547950920668394631678475313752008082689588028385075806198959009721480298642181417611387120760535340960652992598169976318796059443404652478753165940963938026715950444631637055579596396026982943529446772342056118213731997539494790069972362712412848545977350411933491687478962150552753933891241069977903236245408595467016248045708851235686828269686277218325172481148269365738838667311348922929239876501229218854901336077610669087389670091204141817761014674154146755628794442065539896048607369184947340323162627521384048677015174858428761829211514983844416604741456701465732354883642257230400665085164493995639836946749428712602480384130632356640901418646806091518373306556288954289",
    xr_cap: [
      [
        "age",
        "37523550844923066276917545265534491936001653058431807699727798378094010348017417786213033463012541464861614713651678817589894752131766899552202186956509278956052677681349590167219631006515597935364124683509557223008283580029502931430380055551345019089794453342866634865505293670597130041956152064268604570574775784367900164625667326244382433984825612756021533073304839324299187948682509607641828855308845653725291687712265043071582873816295392972053358963210517456371474273531564989381194134152519027319325114667103082545250397114009229013996244896611333191925354781709243382864211341173108829209135657104587482214147977220885303413739052442209985783183870139853950883453738389448581714672060",
      ],
      [
        "name",
        "40114198290379256041372995441628703701697468212013103904320488156133624512624518776636636679936428767628511100834703945932272277119352677403376670387372871153129929576812118980029243346717913240254947965865744085397369091151556546260636586787167694200525462305016276069215035338546740434877965464035950368040654082423013022634233986285166071269362922845761571385784692708141028444335024777471220924204393976065258643143210131836379590020472238396839577304048276973858344620772092596583905864740719861059017160818497762374044149149314046526512381034705421360416522645565343294048956673555742143144006335123972014910685697417095527968642708567895812407107903351826576984395268441796123152869510",
      ],
      [
        "master_secret",
        "17378775238119039681239435504832690562693139985297581004609697280961799415478395227365074603387798682709917541921746683788459574112268962573229585691444414002163279289000517128970409045422613794886895141511303902319051161040962745971806552893764259050521879639998894425230406084402232911982800786217758930274472277822969507777888869816351683032762867227108504826294469816717150773627310267951901092893045791169831629487768555281136526127037211876008761095116571863850777229858315210904916939671575373966848439177870458227542504890675195429629741131074431032162974747956977739339739205375284664571315097532432745565887768994606184944468164941808835757519277660700337481958408893690556466192208",
      ],
    ],
  },
  nonce: "1155389807945475146571300",
  method_name: "anoncreds",
};

export const credDef: SDK.Domain.Anoncreds.CredentialDefinition = {
  schemaId: schemaId,
  issuerId: "did:web:xyz",
  type: "CL",
  tag: "default-tag",
  value: {
    primary: {
      n: "2138440416314633374591088195063696546043123277066922638020134791602273076278733265198390559999196639059617332341897171969471396384426442263407149455313654361683364983454358134154449737184762832549626365860664862681300853260092245460133629393197506797813510115597160823513332022868942084864264115026443220310847039670437343802177458713870037673612155704946372493840496386886773727466495489416209443026828278038061798339071661238983028310965032474627760641708951476779486574582009667149594572417153818776817059886544993889576267253226541766667935646506220326294624143640755229768275395867260209310406030868988219396673",
      s: "375783515905172479678189694439438293124410653823481120500720236836905424414937248674149487774807325687499797860172928285508262280982970486768785344476352731223145346966890620843636512852741061102998942506714117113306492151964896503097722677379824165340858924427501815041684806109662866453098916197117471136063544146802291756839519730104512053670312142976363639936614666586671853469442125677481817693926232925010812196258066027716393514210467312905260647664980944899919627823305269563954240416713003055413714633135095057064137982879242895058862234484222386526805971607419993779687534728535549485529895709794024363544",
      r: [
        [
          "name",
          "1339792759576954480492376578847792893360328516229286900150133471363186583829749911481667461401130501227404036403509999655715920590906655449568921973193383734895050724786440176443319672836559729173248746986868722909818220919403659226270224677749054849267437090960630699131904219878221761847284501312771606158271185560102808030298570761806506842137173746368720591853713380684958166350096104972264094294658573736651672550243062941442151223970367393394495048879093769466881961496855436604768494279534819818767775118321755604018201554330386132841353338949038092004967328970916219672468954833865033319360866074670007780618",
        ],
        [
          "master_secret",
          "812744365608357986515546951213735794905780531247400654485983675689007345252680783465620382756268298324619070095212727671013163587057960315104611505032391159923993186222992472271453158974000542388378728270352857044809506169036309424352546411124179707638441673291158450401569249553417829367721202384508794163270341742020366880294131562095198464204914661778362000567741892826931098757894984606489166588347686099839472171239690638334264704817162009248984017866176802917792042053625420351082400053844639007943327226933542386763152742005797026693758548721701645341688448869500455939673371665799883665035196100593742820765",
        ],
        [
          "age",
          "1449485663749865112122084718309651799315876369399955386403349647157857267039738681846930133397399422116354888183111371765400737684123480339059046850189555156190164677867617134270296041268333092741226364695203773774260453734976395787415140818149909781659096210986518767963537521355538341046796673590463001432519694523140909453262132434115275751962728302009629278131044645113553957913861064628840202634780565720519420413110235161108122048945955929418529430552412537083201815025931848807079298247150295522314313662791060217650118275501496403633416974085086279896777251419212772606455298376048561561660554033200664561122",
        ],
      ],
      rctxt:
        "860911025032267966121537116747511648169210971555331852297327983657139587085942104673653614121933222003762276431341903715802016467096443789060052518852455149260273877263078757890535509188798812965587842763977780248898565717270220023917514653105171642271549164940634714174542454453494892988595340755873769347520154470471770549002457696766440819869518496811070236983222777464118573117519720995323647212086015212164299500917094183811610380285975565511188317704996015410378305078269879189003145417420690660051014495457659387330566369572172736139469523933999250778057312091553667159949004204624608553681313568626037528816",
      z: "2121804520854046155333146480946067403536032620048509173296488461620991470957905025190073393533065162826019376175710496819562862443921284310624809586091960645852195207737003870600962592140196338174630044646719556493115513937191171697377398878248566738696903934756282960488248731988728585511385043106689590903854157937005001256453527432445636221995990491062748065236450143241984118701723276135733985922648057616666342802697522278188836392945197544183484607303781398698553490093880903336637463635680300818603734335511536928765778308620191754963249571453280495676312497378814397081522448865551665149984638461990456850881",
    },
  },
};

export const credDefs = { [credDefId]: credDef };

export const createJWTPayload = (
  id: string,
  proof: string,
  credentialType: SDK.Domain.CredentialType
) => {
  const vc = {
    id,
    credentialType: credentialType,
    type: [credentialType],
    aud: ["aud"],
    context: ["context"],
    credentialSubject: { whatever: "credSubject" },
    evidence: {
      id: "evidenceId",
      type: "evidenceType",
    },
    expirationDate: new Date().toISOString(),
    issuanceDate: new Date().toISOString(),
    issuer: new SDK.Domain.DID(
      "did",
      "peer",
      "2.Ez6LSms555YhFthn1WV8ciDBpZm86hK9tp83WojJUmxPGk1hZ.Vz6MkmdBjMyB4TS5UbbQw54szm8yvMMf1ftGV2sQVYAxaeWhE.SeyJpZCI6Im5ldy1pZCIsInQiOiJkbSIsInMiOiJodHRwczovL21lZGlhdG9yLnJvb3RzaWQuY2xvdWQiLCJhIjpbImRpZGNvbW0vdjIiXX0"
    ),
    refreshService: {
      id: "refreshServiceId",
      type: "refreshServiceType",
    },
    termsOfUse: {
      id: "termsOfUseId",
      type: "termsOfUseType",
    },
    validFrom: {
      id: "validFromId",
      type: "validFromType",
    },
    validUntil: {
      id: "validUntilId",
      type: "validUntilType",
    },
    credentialSchema: {
      id: "credentialSchemaId",
      type: "credentialSchemaType",
    },
    credentialStatus: {
      id: "credentialStatusId",
      type: "credentialStatusType",
    },
    proof: proof,
  };

  const jwtPayload: any = {
    id: "123",
    iss: "did:peer:2.issuer",
    nbf: 1680615608435,
    sub: "did:peer:2.sub",
    exp: 1680615608435,
    aud: ["aud-json"],
    vc: vc,
  };

  return jwtPayload;
};
export const credRequestMeta: SDK.Domain.Anoncreds.CredentialRequestMeta = {
  link_secret_blinding_data: {
    v_prime:
      "77955816791910907008648197625607251151043985904464685610589268755863823710042524325116894319321593903274621305101429675982328480929558765668395477286044036175023571135951855240427212072392115346223990606637530234412828281763675277786130736667970888577953183545724972075795470500481480587504146888168295548415330994692518385699942377815143595346327569474696881929936106990569016082555989993978175098221779656764883735585641835663445021379504408712254130562797706300716047105206280868009518894051808092685428634143160521444146484478798980767637798519834481411563284127214784285274598304432830695507876151369513892826498610123007743998318639",
  },
  nonce: "384669312299348345170475",
  link_secret_name: "link-secret-id",
};

export const credentialIssued: SDK.Domain.Anoncreds.CredentialIssued = {
  schema_id: schemaId,
  cred_def_id: "did:web:xyz/resource/cred-def",
  values: [
    ["age", { raw: "28", encoded: "28" }],
    [
      "name",
      {
        raw: "john",
        encoded:
          "68231017646261521938414776289104528029572365316885701689085572319872983785594",
      },
    ],
  ],
  signature: {
    p_credential: {
      m_2: "90069112451055455821909400594406389902973279602878070870495376996444562816830",
      a: "863206875070883508185084882433898034597056397288064150964909699848368101345942320681713420008320908172031366175764418516990530197118497873083108998836069955208560561365885178868957934721121818800195152765722925303482592098299043872531270628211279296662298703380533421005111978188231514326269144788469626292012467891951834985914306479999402596193828005218601831577836972155135721113555056320950898902900812022442212634154104525444865293627714269994627396682813488336112739630599692616934030468341046723507920859605204701140679082157987867742695138146865893004386171114420488126218257552981621418620795971402342420055",
      e: "259344723055062059907025491480697571938277889515152306249728583105665800713306759149981690559193987143012367913206299323899696942213235956742930103453519678657228466134629917218519",
      v: "8143446409913772255034152121328368039740626498888186354398879911744619763092523700068534155970316639325500748530790803346133400742208591972338832230481355996998878663423674449927007017103519158518841363025981102486265082027859231212785242394349018269859142047237847004466507505310624703221646956096334505927823727535128643408929895721360649486881661653430795374387398186589089307192641017475854047689060015396792244392488752028709889494148392343976206977761336843050968984216787674405343600492400040342034954879243301323597723425634111031850182237417361092482780483169862079554189749933027076569428078736298787846257330215373212181232245606400244542414366394276001432386415321137893700290570865313825552071290779533007084933667485178966714254743589959898887425372871525225305207025738953531478454150168638254081854031392",
    },
  },
  signature_correctness_proof: {
    se: "471472993450654125094815726148197965574424476578333157254325140782961168825105331051644868767781028679788350834880525043676296586472820693042050052742548830411776592846473749819901073592049502739648801719081538069485917308909817697575396656049685055624390272024518499392129521543088779385005671778669761735194904527436501886256576199999327721691983944094804259738379761906169617912917061639899452266237275643426312858778978574970646335896180734752298062049872360989081844266166354770197707949373253367460986810798494254673065207170398218825977487917435335438139842606666094711078074326163791098396957184806668244832",
    c: "99614365014321274953096367476703930366339506406903542322778818757090357462808",
  },
};

export const createAnonCredsPayload = () => {
  return credentialIssued;
};

export const encodeAnonCredsCredential = (cred: object) => {
  const json = JSON.stringify(cred);
  const encoded = Buffer.from(json);
  return encoded;
};
